
describe("away.promise", function ()
    local away = require "away"
    local Promise = require "away.promise"

    describe("resolve() and reject()", function ()
        it("will fulfill the promise", function ()
            local sched = away.sched()
            local p = Promise.new()
            local touched = false
            away.spawn(sched, function ()
                Promise.resolve(p, "Hello World")
            end)
            away.spawn(sched, function ()
                assert.is_True(Promise.fulfilledp(p))
                touched = true
                away.stop(sched)
            end)
            away.run(sched)
        end)

        it("will error if the promise have been fulfilled", function ()
            local sched = away.sched()
            local p = Promise.new()
            away.spawn(sched, function ()
                p:resolve("Hello World")
                assert.has_error(function ()
                    p:resolve(true)
                end)
            end)
        end)
    end)

    describe("wait()", function ()
        it("can wait for result delivered", function ()
            local sched = away.sched()
            local p = Promise.new()
            away.spawn(sched, function ()
                local result = p:wait()
                assert.are.equal("Hello World", result)
                away.stop(sched)
            end)
            away.spawn(sched, function ()
                p:resolve("Hello World")
            end)
            away.run(sched)
        end)

        it("can error for rejection", function ()
            local sched = away.sched()
            local p = Promise.new()
            local touched = false
            away.spawn(sched, function ()
                assert.has_error(function ()
                    touched = true
                    p:wait()
                end)
                away.stop(sched)
            end)
            away.spawn(sched, function ()
                p:reject("anyerror")
            end)
            away.run(sched)
            assert.is_True(touched)
        end)
    end)

    describe("pwait()", function ()
        it("can wait for result delivered", function ()
            local sched = away.sched()
            local p = Promise.new()
            away.spawn(sched, function ()
                local ret, result = p:pwait()
                assert.is_True(ret)
                assert.are.equal("Hello World", result)
                away.stop(sched)
            end)
            away.spawn(sched, function ()
                p:resolve("Hello World")
            end)
            away.run(sched)
        end)

        it("can error for rejection", function ()
            local sched = away.sched()
            local p = Promise.new()
            away.spawn(sched, function ()
                local ret, reason = p:pwait()
                assert.is_False(ret)
                assert.are.equal("anyerror", reason)
                away.stop(sched)
            end)
            away.spawn(sched, function ()
                p:reject("anyerror")
            end)
            away.run(sched)
        end)
    end)
end)
